{"version":3,"sources":["webpack:///./node_modules/throttle-debounce/debounce.js","webpack:///./node_modules/throttle-debounce/throttle.js","webpack:///./node_modules/element-ui/lib/utils/popper.js","webpack:///./node_modules/element-ui/lib/utils/vue-popper.js"],"names":["throttle","__webpack_require__","module","exports","delay","atBegin","callback","undefined","noTrailing","debounceMode","timeoutID","lastExec","wrapper","self","this","elapsed","Number","Date","args","arguments","exec","apply","clear","clearTimeout","setTimeout","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","Symbol","iterator","root","factory","call","window","DEFAULTS","placement","gpuAcceleration","offset","boundariesElement","boundariesPadding","preventOverflowOrder","flipBehavior","arrowElement","arrowOffset","modifiers","modifiersIgnored","forceAbsolute","Popper","reference","popper","options","_reference","jquery","state","isNotDefined","isConfig","Object","prototype","toString","_popper","parse","_options","assign","map","modifier","indexOf","setAttribute","bind","position","_getPosition","setStyle","top","update","_setupEventListeners","getOuterSizes","element","_display","style","display","_visibility","visibility","offsetWidth","styles","getComputedStyle","x","parseFloat","marginTop","marginBottom","y","marginLeft","marginRight","result","width","height","offsetHeight","getOppositePlacement","hash","left","right","bottom","replace","matched","getPopperClientRect","popperOffsets","offsets","getArrayKeyIndex","arr","keyToFind","key","i","getStyleComputedProperty","property","css","getOffsetParent","offsetParent","document","body","documentElement","getScrollParent","parent","parentNode","scrollTop","scrollLeft","isFixed","is_numeric","n","isNaN","isFinite","keys","forEach","prop","unit","isFunction","functionToCheck","getType","getOffsetRect","elementRect","offsetLeft","offsetTop","getBoundingClientRect","rect","isIE","navigator","userAgent","rectTop","tagName","getOffsetRectRelativeToCustomParent","fixed","parentRect","scrollParent","getSupportedPropertyName","prefixes","length","toCheck","charAt","toUpperCase","slice","destroy","removeAttribute","_removeEventListeners","removeOnDestroy","remove","data","instance","_originalPlacement","_getOffsets","boundaries","_getBoundaries","runModifiers","updateCallback","onCreate","onUpdate","config","defaultConfig","classNames","attributes","content","contentType","arrowTagName","arrowClassNames","arrowAttributes","d","createElement","addClassNames","addAttributes","appendChild","innerHTML","textContent","arrow","querySelectorAll","console","warn","Element","className","classList","add","attribute","split","container","isParentFixed","referenceOffsets","popperRect","updateBound","addEventListener","target","scrollTarget","removeEventListener","padding","html","Math","max","scrollHeight","clientHeight","scrollWidth","clientWidth","offsetParentRect","getScrollTopValue","getScrollLeftValue","ends","modifiersToRun","isModifierRequired","requesting","requested","index","filter","applyStyle","prefixedProperty","round","shift","basePlacement","shiftVariation","shiftOffsets","start","end","axis","preventOverflow","order","check","min","direction","keepTogether","f","floor","flip","flipped","placementOpposite","variation","flipOrder","step","a","_flip","querySelector","contains","arrowStyle","isVertical","len","side","altSide","opSide","arrowSize","center","sideValue","defineProperty","enumerable","configurable","writable","value","TypeError","to","nextSource","keysArray","nextIndex","nextKey","desc","getOwnPropertyDescriptor","__esModule","_vue","_vue2","_interopRequireDefault","_popup","obj","default","PopperJS","$isServer","stop","e","stopPropagation","props","transformOrigin","type","Boolean","String","visibleArrow","appendToBody","popperOptions","showPopper","currentPlacement","watch","immediate","handler","val","$emit","disabled","updatePopper","destroyPopper","methods","createPopper","_this","test","popperElm","$refs","referenceElm","$slots","elm","appendArrow","popperJS","_","resetTransformOrigin","$nextTick","zIndex","PopupManager","nextZIndex","doDestroy","forceDestroy","placementMap","getAttribute","origin","appended","item","name","beforeDestroy","removeChild","deactivated","$options"],"mappings":"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","file":"js/chunk-85f2cc50.38cca27f.js","sourcesContent":["/* eslint-disable no-undefined */\n\nvar throttle = require('./throttle');\n\n/**\n * Debounce execution of a function. Debouncing, unlike throttling,\n * guarantees that a function is only executed a single time, either at the\n * very beginning of a series of calls, or at the very end.\n *\n * @param  {Number}   delay         A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {Boolean}  [atBegin]     Optional, defaults to false. If atBegin is false or unspecified, callback will only be executed `delay` milliseconds\n *                                  after the last debounced-function call. If atBegin is true, callback will be executed only at the first debounced-function call.\n *                                  (After the throttled-function has not been called for `delay` milliseconds, the internal counter is reset).\n * @param  {Function} callback      A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                  to `callback` when the debounced-function is executed.\n *\n * @return {Function} A new, debounced function.\n */\nmodule.exports = function ( delay, atBegin, callback ) {\n\treturn callback === undefined ? throttle(delay, atBegin, false) : throttle(delay, callback, atBegin !== false);\n};\n","/* eslint-disable no-undefined,no-param-reassign,no-shadow */\n\n/**\n * Throttle execution of a function. Especially useful for rate limiting\n * execution of handlers on events like resize and scroll.\n *\n * @param  {Number}    delay          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  {Boolean}   [noTrailing]   Optional, defaults to false. If noTrailing is true, callback will only execute every `delay` milliseconds while the\n *                                    throttled-function is being called. If noTrailing is false or unspecified, callback will be executed one final time\n *                                    after the last throttled-function call. (After the throttled-function has not been called for `delay` milliseconds,\n *                                    the internal counter is reset)\n * @param  {Function}  callback       A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\n *                                    to `callback` when the throttled-function is executed.\n * @param  {Boolean}   [debounceMode] If `debounceMode` is true (at begin), schedule `clear` to execute after `delay` ms. If `debounceMode` is false (at end),\n *                                    schedule `callback` to execute after `delay` ms.\n *\n * @return {Function}  A new, throttled, function.\n */\nmodule.exports = function ( delay, noTrailing, callback, debounceMode ) {\n\n\t// After wrapper has stopped being called, this timeout ensures that\n\t// `callback` is executed at the proper times in `throttle` and `end`\n\t// debounce modes.\n\tvar timeoutID;\n\n\t// Keep track of the last time `callback` was executed.\n\tvar lastExec = 0;\n\n\t// `noTrailing` defaults to falsy.\n\tif ( typeof noTrailing !== 'boolean' ) {\n\t\tdebounceMode = callback;\n\t\tcallback = noTrailing;\n\t\tnoTrailing = undefined;\n\t}\n\n\t// The `wrapper` function encapsulates all of the throttling / debouncing\n\t// functionality and when executed will limit the rate at which `callback`\n\t// is executed.\n\tfunction wrapper () {\n\n\t\tvar self = this;\n\t\tvar elapsed = Number(new Date()) - lastExec;\n\t\tvar args = arguments;\n\n\t\t// Execute `callback` and update the `lastExec` timestamp.\n\t\tfunction exec () {\n\t\t\tlastExec = Number(new Date());\n\t\t\tcallback.apply(self, args);\n\t\t}\n\n\t\t// If `debounceMode` is true (at begin) this is used to clear the flag\n\t\t// to allow future `callback` executions.\n\t\tfunction clear () {\n\t\t\ttimeoutID = undefined;\n\t\t}\n\n\t\tif ( debounceMode && !timeoutID ) {\n\t\t\t// Since `wrapper` is being called for the first time and\n\t\t\t// `debounceMode` is true (at begin), execute `callback`.\n\t\t\texec();\n\t\t}\n\n\t\t// Clear any existing timeout.\n\t\tif ( timeoutID ) {\n\t\t\tclearTimeout(timeoutID);\n\t\t}\n\n\t\tif ( debounceMode === undefined && elapsed > delay ) {\n\t\t\t// In throttle mode, if `delay` time has been exceeded, execute\n\t\t\t// `callback`.\n\t\t\texec();\n\n\t\t} else if ( noTrailing !== true ) {\n\t\t\t// In trailing throttle mode, since `delay` time has not been\n\t\t\t// exceeded, schedule `callback` to execute `delay` ms after most\n\t\t\t// recent execution.\n\t\t\t//\n\t\t\t// If `debounceMode` is true (at begin), schedule `clear` to execute\n\t\t\t// after `delay` ms.\n\t\t\t//\n\t\t\t// If `debounceMode` is false (at end), schedule `callback` to\n\t\t\t// execute after `delay` ms.\n\t\t\ttimeoutID = setTimeout(debounceMode ? clear : exec, debounceMode === undefined ? delay - elapsed : delay);\n\t\t}\n\n\t}\n\n\t// Return the wrapper function.\n\treturn wrapper;\n\n};\n","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version {{version}}\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n//\n// Cross module loader\n// Supported: Node, AMD, Browser globals\n//\n;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(factory);\n    } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.Popper = factory();\n    }\n})(undefined, function () {\n\n    'use strict';\n\n    var root = window;\n\n    // default options\n    var DEFAULTS = {\n        // placement of the popper\n        placement: 'bottom',\n\n        gpuAcceleration: true,\n\n        // shift popper from its origin by the given amount of pixels (can be negative)\n        offset: 0,\n\n        // the element which will act as boundary of the popper\n        boundariesElement: 'viewport',\n\n        // amount of pixel used to define a minimum distance between the boundaries and the popper\n        boundariesPadding: 5,\n\n        // popper will try to prevent overflow following this order,\n        // by default, then, it could overflow on the left and on top of the boundariesElement\n        preventOverflowOrder: ['left', 'right', 'top', 'bottom'],\n\n        // the behavior used by flip to change the placement of the popper\n        flipBehavior: 'flip',\n\n        arrowElement: '[x-arrow]',\n\n        arrowOffset: 0,\n\n        // list of functions used to modify the offsets before they are applied to the popper\n        modifiers: ['shift', 'offset', 'preventOverflow', 'keepTogether', 'arrow', 'flip', 'applyStyle'],\n\n        modifiersIgnored: [],\n\n        forceAbsolute: false\n    };\n\n    /**\n     * Create a new Popper.js instance\n     * @constructor Popper\n     * @param {HTMLElement} reference - The reference element used to position the popper\n     * @param {HTMLElement|Object} popper\n     *      The HTML element used as popper, or a configuration used to generate the popper.\n     * @param {String} [popper.tagName='div'] The tag name of the generated popper.\n     * @param {Array} [popper.classNames=['popper']] Array of classes to apply to the generated popper.\n     * @param {Array} [popper.attributes] Array of attributes to apply, specify `attr:value` to assign a value to it.\n     * @param {HTMLElement|String} [popper.parent=window.document.body] The parent element, given as HTMLElement or as query string.\n     * @param {String} [popper.content=''] The content of the popper, it can be text, html, or node; if it is not text, set `contentType` to `html` or `node`.\n     * @param {String} [popper.contentType='text'] If `html`, the `content` will be parsed as HTML. If `node`, it will be appended as-is.\n     * @param {String} [popper.arrowTagName='div'] Same as `popper.tagName` but for the arrow element.\n     * @param {Array} [popper.arrowClassNames='popper__arrow'] Same as `popper.classNames` but for the arrow element.\n     * @param {String} [popper.arrowAttributes=['x-arrow']] Same as `popper.attributes` but for the arrow element.\n     * @param {Object} options\n     * @param {String} [options.placement=bottom]\n     *      Placement of the popper accepted values: `top(-start, -end), right(-start, -end), bottom(-start, -right),\n     *      left(-start, -end)`\n     *\n     * @param {HTMLElement|String} [options.arrowElement='[x-arrow]']\n     *      The DOM Node used as arrow for the popper, or a CSS selector used to get the DOM node. It must be child of\n     *      its parent Popper. Popper.js will apply to the given element the style required to align the arrow with its\n     *      reference element.\n     *      By default, it will look for a child node of the popper with the `x-arrow` attribute.\n     *\n     * @param {Boolean} [options.gpuAcceleration=true]\n     *      When this property is set to true, the popper position will be applied using CSS3 translate3d, allowing the\n     *      browser to use the GPU to accelerate the rendering.\n     *      If set to false, the popper will be placed using `top` and `left` properties, not using the GPU.\n     *\n     * @param {Number} [options.offset=0]\n     *      Amount of pixels the popper will be shifted (can be negative).\n     *\n     * @param {String|Element} [options.boundariesElement='viewport']\n     *      The element which will define the boundaries of the popper position, the popper will never be placed outside\n     *      of the defined boundaries (except if `keepTogether` is enabled)\n     *\n     * @param {Number} [options.boundariesPadding=5]\n     *      Additional padding for the boundaries\n     *\n     * @param {Array} [options.preventOverflowOrder=['left', 'right', 'top', 'bottom']]\n     *      Order used when Popper.js tries to avoid overflows from the boundaries, they will be checked in order,\n     *      this means that the last ones will never overflow\n     *\n     * @param {String|Array} [options.flipBehavior='flip']\n     *      The behavior used by the `flip` modifier to change the placement of the popper when the latter is trying to\n     *      overlap its reference element. Defining `flip` as value, the placement will be flipped on\n     *      its axis (`right - left`, `top - bottom`).\n     *      You can even pass an array of placements (eg: `['right', 'left', 'top']` ) to manually specify\n     *      how alter the placement when a flip is needed. (eg. in the above example, it would first flip from right to left,\n     *      then, if even in its new placement, the popper is overlapping its reference element, it will be moved to top)\n     *\n     * @param {Array} [options.modifiers=[ 'shift', 'offset', 'preventOverflow', 'keepTogether', 'arrow', 'flip', 'applyStyle']]\n     *      List of functions used to modify the data before they are applied to the popper, add your custom functions\n     *      to this array to edit the offsets and placement.\n     *      The function should reflect the @params and @returns of preventOverflow\n     *\n     * @param {Array} [options.modifiersIgnored=[]]\n     *      Put here any built-in modifier name you want to exclude from the modifiers list\n     *      The function should reflect the @params and @returns of preventOverflow\n     *\n     * @param {Boolean} [options.removeOnDestroy=false]\n     *      Set to true if you want to automatically remove the popper when you call the `destroy` method.\n     */\n    function Popper(reference, popper, options) {\n        this._reference = reference.jquery ? reference[0] : reference;\n        this.state = {};\n\n        // if the popper variable is a configuration object, parse it to generate an HTMLElement\n        // generate a default popper if is not defined\n        var isNotDefined = typeof popper === 'undefined' || popper === null;\n        var isConfig = popper && Object.prototype.toString.call(popper) === '[object Object]';\n        if (isNotDefined || isConfig) {\n            this._popper = this.parse(isConfig ? popper : {});\n        }\n        // otherwise, use the given HTMLElement as popper\n        else {\n                this._popper = popper.jquery ? popper[0] : popper;\n            }\n\n        // with {} we create a new object with the options inside it\n        this._options = Object.assign({}, DEFAULTS, options);\n\n        // refactoring modifiers' list\n        this._options.modifiers = this._options.modifiers.map(function (modifier) {\n            // remove ignored modifiers\n            if (this._options.modifiersIgnored.indexOf(modifier) !== -1) return;\n\n            // set the x-placement attribute before everything else because it could be used to add margins to the popper\n            // margins needs to be calculated to get the correct popper offsets\n            if (modifier === 'applyStyle') {\n                this._popper.setAttribute('x-placement', this._options.placement);\n            }\n\n            // return predefined modifier identified by string or keep the custom one\n            return this.modifiers[modifier] || modifier;\n        }.bind(this));\n\n        // make sure to apply the popper position before any computation\n        this.state.position = this._getPosition(this._popper, this._reference);\n        setStyle(this._popper, { position: this.state.position, top: 0 });\n\n        // fire the first update to position the popper in the right place\n        this.update();\n\n        // setup event listeners, they will take care of update the position in specific situations\n        this._setupEventListeners();\n        return this;\n    }\n\n    //\n    // Methods\n    //\n    /**\n     * Destroy the popper\n     * @method\n     * @memberof Popper\n     */\n    Popper.prototype.destroy = function () {\n        this._popper.removeAttribute('x-placement');\n        this._popper.style.left = '';\n        this._popper.style.position = '';\n        this._popper.style.top = '';\n        this._popper.style[getSupportedPropertyName('transform')] = '';\n        this._removeEventListeners();\n\n        // remove the popper if user explicity asked for the deletion on destroy\n        if (this._options.removeOnDestroy) {\n            this._popper.remove();\n        }\n        return this;\n    };\n\n    /**\n     * Updates the position of the popper, computing the new offsets and applying the new style\n     * @method\n     * @memberof Popper\n     */\n    Popper.prototype.update = function () {\n        var data = { instance: this, styles: {} };\n\n        // store placement inside the data object, modifiers will be able to edit `placement` if needed\n        // and refer to _originalPlacement to know the original value\n        data.placement = this._options.placement;\n        data._originalPlacement = this._options.placement;\n\n        // compute the popper and reference offsets and put them inside data.offsets\n        data.offsets = this._getOffsets(this._popper, this._reference, data.placement);\n\n        // get boundaries\n        data.boundaries = this._getBoundaries(data, this._options.boundariesPadding, this._options.boundariesElement);\n\n        data = this.runModifiers(data, this._options.modifiers);\n\n        if (typeof this.state.updateCallback === 'function') {\n            this.state.updateCallback(data);\n        }\n    };\n\n    /**\n     * If a function is passed, it will be executed after the initialization of popper with as first argument the Popper instance.\n     * @method\n     * @memberof Popper\n     * @param {Function} callback\n     */\n    Popper.prototype.onCreate = function (callback) {\n        // the createCallbacks return as first argument the popper instance\n        callback(this);\n        return this;\n    };\n\n    /**\n     * If a function is passed, it will be executed after each update of popper with as first argument the set of coordinates and informations\n     * used to style popper and its arrow.\n     * NOTE: it doesn't get fired on the first call of the `Popper.update()` method inside the `Popper` constructor!\n     * @method\n     * @memberof Popper\n     * @param {Function} callback\n     */\n    Popper.prototype.onUpdate = function (callback) {\n        this.state.updateCallback = callback;\n        return this;\n    };\n\n    /**\n     * Helper used to generate poppers from a configuration file\n     * @method\n     * @memberof Popper\n     * @param config {Object} configuration\n     * @returns {HTMLElement} popper\n     */\n    Popper.prototype.parse = function (config) {\n        var defaultConfig = {\n            tagName: 'div',\n            classNames: ['popper'],\n            attributes: [],\n            parent: root.document.body,\n            content: '',\n            contentType: 'text',\n            arrowTagName: 'div',\n            arrowClassNames: ['popper__arrow'],\n            arrowAttributes: ['x-arrow']\n        };\n        config = Object.assign({}, defaultConfig, config);\n\n        var d = root.document;\n\n        var popper = d.createElement(config.tagName);\n        addClassNames(popper, config.classNames);\n        addAttributes(popper, config.attributes);\n        if (config.contentType === 'node') {\n            popper.appendChild(config.content.jquery ? config.content[0] : config.content);\n        } else if (config.contentType === 'html') {\n            popper.innerHTML = config.content;\n        } else {\n            popper.textContent = config.content;\n        }\n\n        if (config.arrowTagName) {\n            var arrow = d.createElement(config.arrowTagName);\n            addClassNames(arrow, config.arrowClassNames);\n            addAttributes(arrow, config.arrowAttributes);\n            popper.appendChild(arrow);\n        }\n\n        var parent = config.parent.jquery ? config.parent[0] : config.parent;\n\n        // if the given parent is a string, use it to match an element\n        // if more than one element is matched, the first one will be used as parent\n        // if no elements are matched, the script will throw an error\n        if (typeof parent === 'string') {\n            parent = d.querySelectorAll(config.parent);\n            if (parent.length > 1) {\n                console.warn('WARNING: the given `parent` query(' + config.parent + ') matched more than one element, the first one will be used');\n            }\n            if (parent.length === 0) {\n                throw 'ERROR: the given `parent` doesn\\'t exists!';\n            }\n            parent = parent[0];\n        }\n        // if the given parent is a DOM nodes list or an array of nodes with more than one element,\n        // the first one will be used as parent\n        if (parent.length > 1 && parent instanceof Element === false) {\n            console.warn('WARNING: you have passed as parent a list of elements, the first one will be used');\n            parent = parent[0];\n        }\n\n        // append the generated popper to its parent\n        parent.appendChild(popper);\n\n        return popper;\n\n        /**\n         * Adds class names to the given element\n         * @function\n         * @ignore\n         * @param {HTMLElement} target\n         * @param {Array} classes\n         */\n        function addClassNames(element, classNames) {\n            classNames.forEach(function (className) {\n                element.classList.add(className);\n            });\n        }\n\n        /**\n         * Adds attributes to the given element\n         * @function\n         * @ignore\n         * @param {HTMLElement} target\n         * @param {Array} attributes\n         * @example\n         * addAttributes(element, [ 'data-info:foobar' ]);\n         */\n        function addAttributes(element, attributes) {\n            attributes.forEach(function (attribute) {\n                element.setAttribute(attribute.split(':')[0], attribute.split(':')[1] || '');\n            });\n        }\n    };\n\n    /**\n     * Helper used to get the position which will be applied to the popper\n     * @method\n     * @memberof Popper\n     * @param config {HTMLElement} popper element\n     * @param reference {HTMLElement} reference element\n     * @returns {String} position\n     */\n    Popper.prototype._getPosition = function (popper, reference) {\n        var container = getOffsetParent(reference);\n\n        if (this._options.forceAbsolute) {\n            return 'absolute';\n        }\n\n        // Decide if the popper will be fixed\n        // If the reference element is inside a fixed context, the popper will be fixed as well to allow them to scroll together\n        var isParentFixed = isFixed(reference, container);\n        return isParentFixed ? 'fixed' : 'absolute';\n    };\n\n    /**\n     * Get offsets to the popper\n     * @method\n     * @memberof Popper\n     * @access private\n     * @param {Element} popper - the popper element\n     * @param {Element} reference - the reference element (the popper will be relative to this)\n     * @returns {Object} An object containing the offsets which will be applied to the popper\n     */\n    Popper.prototype._getOffsets = function (popper, reference, placement) {\n        placement = placement.split('-')[0];\n        var popperOffsets = {};\n\n        popperOffsets.position = this.state.position;\n        var isParentFixed = popperOffsets.position === 'fixed';\n\n        //\n        // Get reference element position\n        //\n        var referenceOffsets = getOffsetRectRelativeToCustomParent(reference, getOffsetParent(popper), isParentFixed);\n\n        //\n        // Get popper sizes\n        //\n        var popperRect = getOuterSizes(popper);\n\n        //\n        // Compute offsets of popper\n        //\n\n        // depending by the popper placement we have to compute its offsets slightly differently\n        if (['right', 'left'].indexOf(placement) !== -1) {\n            popperOffsets.top = referenceOffsets.top + referenceOffsets.height / 2 - popperRect.height / 2;\n            if (placement === 'left') {\n                popperOffsets.left = referenceOffsets.left - popperRect.width;\n            } else {\n                popperOffsets.left = referenceOffsets.right;\n            }\n        } else {\n            popperOffsets.left = referenceOffsets.left + referenceOffsets.width / 2 - popperRect.width / 2;\n            if (placement === 'top') {\n                popperOffsets.top = referenceOffsets.top - popperRect.height;\n            } else {\n                popperOffsets.top = referenceOffsets.bottom;\n            }\n        }\n\n        // Add width and height to our offsets object\n        popperOffsets.width = popperRect.width;\n        popperOffsets.height = popperRect.height;\n\n        return {\n            popper: popperOffsets,\n            reference: referenceOffsets\n        };\n    };\n\n    /**\n     * Setup needed event listeners used to update the popper position\n     * @method\n     * @memberof Popper\n     * @access private\n     */\n    Popper.prototype._setupEventListeners = function () {\n        // NOTE: 1 DOM access here\n        this.state.updateBound = this.update.bind(this);\n        root.addEventListener('resize', this.state.updateBound);\n        // if the boundariesElement is window we don't need to listen for the scroll event\n        if (this._options.boundariesElement !== 'window') {\n            var target = getScrollParent(this._reference);\n            // here it could be both `body` or `documentElement` thanks to Firefox, we then check both\n            if (target === root.document.body || target === root.document.documentElement) {\n                target = root;\n            }\n            target.addEventListener('scroll', this.state.updateBound);\n            this.state.scrollTarget = target;\n        }\n    };\n\n    /**\n     * Remove event listeners used to update the popper position\n     * @method\n     * @memberof Popper\n     * @access private\n     */\n    Popper.prototype._removeEventListeners = function () {\n        // NOTE: 1 DOM access here\n        root.removeEventListener('resize', this.state.updateBound);\n        if (this._options.boundariesElement !== 'window' && this.state.scrollTarget) {\n            this.state.scrollTarget.removeEventListener('scroll', this.state.updateBound);\n            this.state.scrollTarget = null;\n        }\n        this.state.updateBound = null;\n    };\n\n    /**\n     * Computed the boundaries limits and return them\n     * @method\n     * @memberof Popper\n     * @access private\n     * @param {Object} data - Object containing the property \"offsets\" generated by `_getOffsets`\n     * @param {Number} padding - Boundaries padding\n     * @param {Element} boundariesElement - Element used to define the boundaries\n     * @returns {Object} Coordinates of the boundaries\n     */\n    Popper.prototype._getBoundaries = function (data, padding, boundariesElement) {\n        // NOTE: 1 DOM access here\n        var boundaries = {};\n        var width, height;\n        if (boundariesElement === 'window') {\n            var body = root.document.body,\n                html = root.document.documentElement;\n\n            height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n            width = Math.max(body.scrollWidth, body.offsetWidth, html.clientWidth, html.scrollWidth, html.offsetWidth);\n\n            boundaries = {\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0\n            };\n        } else if (boundariesElement === 'viewport') {\n            var offsetParent = getOffsetParent(this._popper);\n            var scrollParent = getScrollParent(this._popper);\n            var offsetParentRect = getOffsetRect(offsetParent);\n\n            // Thanks the fucking native API, `document.body.scrollTop` & `document.documentElement.scrollTop`\n            var getScrollTopValue = function getScrollTopValue(element) {\n                return element == document.body ? Math.max(document.documentElement.scrollTop, document.body.scrollTop) : element.scrollTop;\n            };\n            var getScrollLeftValue = function getScrollLeftValue(element) {\n                return element == document.body ? Math.max(document.documentElement.scrollLeft, document.body.scrollLeft) : element.scrollLeft;\n            };\n\n            // if the popper is fixed we don't have to substract scrolling from the boundaries\n            var scrollTop = data.offsets.popper.position === 'fixed' ? 0 : getScrollTopValue(scrollParent);\n            var scrollLeft = data.offsets.popper.position === 'fixed' ? 0 : getScrollLeftValue(scrollParent);\n\n            boundaries = {\n                top: 0 - (offsetParentRect.top - scrollTop),\n                right: root.document.documentElement.clientWidth - (offsetParentRect.left - scrollLeft),\n                bottom: root.document.documentElement.clientHeight - (offsetParentRect.top - scrollTop),\n                left: 0 - (offsetParentRect.left - scrollLeft)\n            };\n        } else {\n            if (getOffsetParent(this._popper) === boundariesElement) {\n                boundaries = {\n                    top: 0,\n                    left: 0,\n                    right: boundariesElement.clientWidth,\n                    bottom: boundariesElement.clientHeight\n                };\n            } else {\n                boundaries = getOffsetRect(boundariesElement);\n            }\n        }\n        boundaries.left += padding;\n        boundaries.right -= padding;\n        boundaries.top = boundaries.top + padding;\n        boundaries.bottom = boundaries.bottom - padding;\n        return boundaries;\n    };\n\n    /**\n     * Loop trough the list of modifiers and run them in order, each of them will then edit the data object\n     * @method\n     * @memberof Popper\n     * @access public\n     * @param {Object} data\n     * @param {Array} modifiers\n     * @param {Function} ends\n     */\n    Popper.prototype.runModifiers = function (data, modifiers, ends) {\n        var modifiersToRun = modifiers.slice();\n        if (ends !== undefined) {\n            modifiersToRun = this._options.modifiers.slice(0, getArrayKeyIndex(this._options.modifiers, ends));\n        }\n\n        modifiersToRun.forEach(function (modifier) {\n            if (isFunction(modifier)) {\n                data = modifier.call(this, data);\n            }\n        }.bind(this));\n\n        return data;\n    };\n\n    /**\n     * Helper used to know if the given modifier depends from another one.\n     * @method\n     * @memberof Popper\n     * @param {String} requesting - name of requesting modifier\n     * @param {String} requested - name of requested modifier\n     * @returns {Boolean}\n     */\n    Popper.prototype.isModifierRequired = function (requesting, requested) {\n        var index = getArrayKeyIndex(this._options.modifiers, requesting);\n        return !!this._options.modifiers.slice(0, index).filter(function (modifier) {\n            return modifier === requested;\n        }).length;\n    };\n\n    //\n    // Modifiers\n    //\n\n    /**\n     * Modifiers list\n     * @namespace Popper.modifiers\n     * @memberof Popper\n     * @type {Object}\n     */\n    Popper.prototype.modifiers = {};\n\n    /**\n     * Apply the computed styles to the popper element\n     * @method\n     * @memberof Popper.modifiers\n     * @argument {Object} data - The data object generated by `update` method\n     * @returns {Object} The same data object\n     */\n    Popper.prototype.modifiers.applyStyle = function (data) {\n        // apply the final offsets to the popper\n        // NOTE: 1 DOM access here\n        var styles = {\n            position: data.offsets.popper.position\n        };\n\n        // round top and left to avoid blurry text\n        var left = Math.round(data.offsets.popper.left);\n        var top = Math.round(data.offsets.popper.top);\n\n        // if gpuAcceleration is set to true and transform is supported, we use `translate3d` to apply the position to the popper\n        // we automatically use the supported prefixed version if needed\n        var prefixedProperty;\n        if (this._options.gpuAcceleration && (prefixedProperty = getSupportedPropertyName('transform'))) {\n            styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n            styles.top = 0;\n            styles.left = 0;\n        }\n        // othwerise, we use the standard `left` and `top` properties\n        else {\n                styles.left = left;\n                styles.top = top;\n            }\n\n        // any property present in `data.styles` will be applied to the popper,\n        // in this way we can make the 3rd party modifiers add custom styles to it\n        // Be aware, modifiers could override the properties defined in the previous\n        // lines of this modifier!\n        Object.assign(styles, data.styles);\n\n        setStyle(this._popper, styles);\n\n        // set an attribute which will be useful to style the tooltip (use it to properly position its arrow)\n        // NOTE: 1 DOM access here\n        this._popper.setAttribute('x-placement', data.placement);\n\n        // if the arrow modifier is required and the arrow style has been computed, apply the arrow style\n        if (this.isModifierRequired(this.modifiers.applyStyle, this.modifiers.arrow) && data.offsets.arrow) {\n            setStyle(data.arrowElement, data.offsets.arrow);\n        }\n\n        return data;\n    };\n\n    /**\n     * Modifier used to shift the popper on the start or end of its reference element side\n     * @method\n     * @memberof Popper.modifiers\n     * @argument {Object} data - The data object generated by `update` method\n     * @returns {Object} The data object, properly modified\n     */\n    Popper.prototype.modifiers.shift = function (data) {\n        var placement = data.placement;\n        var basePlacement = placement.split('-')[0];\n        var shiftVariation = placement.split('-')[1];\n\n        // if shift shiftVariation is specified, run the modifier\n        if (shiftVariation) {\n            var reference = data.offsets.reference;\n            var popper = getPopperClientRect(data.offsets.popper);\n\n            var shiftOffsets = {\n                y: {\n                    start: { top: reference.top },\n                    end: { top: reference.top + reference.height - popper.height }\n                },\n                x: {\n                    start: { left: reference.left },\n                    end: { left: reference.left + reference.width - popper.width }\n                }\n            };\n\n            var axis = ['bottom', 'top'].indexOf(basePlacement) !== -1 ? 'x' : 'y';\n\n            data.offsets.popper = Object.assign(popper, shiftOffsets[axis][shiftVariation]);\n        }\n\n        return data;\n    };\n\n    /**\n     * Modifier used to make sure the popper does not overflows from it's boundaries\n     * @method\n     * @memberof Popper.modifiers\n     * @argument {Object} data - The data object generated by `update` method\n     * @returns {Object} The data object, properly modified\n     */\n    Popper.prototype.modifiers.preventOverflow = function (data) {\n        var order = this._options.preventOverflowOrder;\n        var popper = getPopperClientRect(data.offsets.popper);\n\n        var check = {\n            left: function left() {\n                var left = popper.left;\n                if (popper.left < data.boundaries.left) {\n                    left = Math.max(popper.left, data.boundaries.left);\n                }\n                return { left: left };\n            },\n            right: function right() {\n                var left = popper.left;\n                if (popper.right > data.boundaries.right) {\n                    left = Math.min(popper.left, data.boundaries.right - popper.width);\n                }\n                return { left: left };\n            },\n            top: function top() {\n                var top = popper.top;\n                if (popper.top < data.boundaries.top) {\n                    top = Math.max(popper.top, data.boundaries.top);\n                }\n                return { top: top };\n            },\n            bottom: function bottom() {\n                var top = popper.top;\n                if (popper.bottom > data.boundaries.bottom) {\n                    top = Math.min(popper.top, data.boundaries.bottom - popper.height);\n                }\n                return { top: top };\n            }\n        };\n\n        order.forEach(function (direction) {\n            data.offsets.popper = Object.assign(popper, check[direction]());\n        });\n\n        return data;\n    };\n\n    /**\n     * Modifier used to make sure the popper is always near its reference\n     * @method\n     * @memberof Popper.modifiers\n     * @argument {Object} data - The data object generated by _update method\n     * @returns {Object} The data object, properly modified\n     */\n    Popper.prototype.modifiers.keepTogether = function (data) {\n        var popper = getPopperClientRect(data.offsets.popper);\n        var reference = data.offsets.reference;\n        var f = Math.floor;\n\n        if (popper.right < f(reference.left)) {\n            data.offsets.popper.left = f(reference.left) - popper.width;\n        }\n        if (popper.left > f(reference.right)) {\n            data.offsets.popper.left = f(reference.right);\n        }\n        if (popper.bottom < f(reference.top)) {\n            data.offsets.popper.top = f(reference.top) - popper.height;\n        }\n        if (popper.top > f(reference.bottom)) {\n            data.offsets.popper.top = f(reference.bottom);\n        }\n\n        return data;\n    };\n\n    /**\n     * Modifier used to flip the placement of the popper when the latter is starting overlapping its reference element.\n     * Requires the `preventOverflow` modifier before it in order to work.\n     * **NOTE:** This modifier will run all its previous modifiers everytime it tries to flip the popper!\n     * @method\n     * @memberof Popper.modifiers\n     * @argument {Object} data - The data object generated by _update method\n     * @returns {Object} The data object, properly modified\n     */\n    Popper.prototype.modifiers.flip = function (data) {\n        // check if preventOverflow is in the list of modifiers before the flip modifier.\n        // otherwise flip would not work as expected.\n        if (!this.isModifierRequired(this.modifiers.flip, this.modifiers.preventOverflow)) {\n            console.warn('WARNING: preventOverflow modifier is required by flip modifier in order to work, be sure to include it before flip!');\n            return data;\n        }\n\n        if (data.flipped && data.placement === data._originalPlacement) {\n            // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n            return data;\n        }\n\n        var placement = data.placement.split('-')[0];\n        var placementOpposite = getOppositePlacement(placement);\n        var variation = data.placement.split('-')[1] || '';\n\n        var flipOrder = [];\n        if (this._options.flipBehavior === 'flip') {\n            flipOrder = [placement, placementOpposite];\n        } else {\n            flipOrder = this._options.flipBehavior;\n        }\n\n        flipOrder.forEach(function (step, index) {\n            if (placement !== step || flipOrder.length === index + 1) {\n                return;\n            }\n\n            placement = data.placement.split('-')[0];\n            placementOpposite = getOppositePlacement(placement);\n\n            var popperOffsets = getPopperClientRect(data.offsets.popper);\n\n            // this boolean is used to distinguish right and bottom from top and left\n            // they need different computations to get flipped\n            var a = ['right', 'bottom'].indexOf(placement) !== -1;\n\n            // using Math.floor because the reference offsets may contain decimals we are not going to consider here\n            if (a && Math.floor(data.offsets.reference[placement]) > Math.floor(popperOffsets[placementOpposite]) || !a && Math.floor(data.offsets.reference[placement]) < Math.floor(popperOffsets[placementOpposite])) {\n                // we'll use this boolean to detect any flip loop\n                data.flipped = true;\n                data.placement = flipOrder[index + 1];\n                if (variation) {\n                    data.placement += '-' + variation;\n                }\n                data.offsets.popper = this._getOffsets(this._popper, this._reference, data.placement).popper;\n\n                data = this.runModifiers(data, this._options.modifiers, this._flip);\n            }\n        }.bind(this));\n        return data;\n    };\n\n    /**\n     * Modifier used to add an offset to the popper, useful if you more granularity positioning your popper.\n     * The offsets will shift the popper on the side of its reference element.\n     * @method\n     * @memberof Popper.modifiers\n     * @argument {Object} data - The data object generated by _update method\n     * @returns {Object} The data object, properly modified\n     */\n    Popper.prototype.modifiers.offset = function (data) {\n        var offset = this._options.offset;\n        var popper = data.offsets.popper;\n\n        if (data.placement.indexOf('left') !== -1) {\n            popper.top -= offset;\n        } else if (data.placement.indexOf('right') !== -1) {\n            popper.top += offset;\n        } else if (data.placement.indexOf('top') !== -1) {\n            popper.left -= offset;\n        } else if (data.placement.indexOf('bottom') !== -1) {\n            popper.left += offset;\n        }\n        return data;\n    };\n\n    /**\n     * Modifier used to move the arrows on the edge of the popper to make sure them are always between the popper and the reference element\n     * It will use the CSS outer size of the arrow element to know how many pixels of conjuction are needed\n     * @method\n     * @memberof Popper.modifiers\n     * @argument {Object} data - The data object generated by _update method\n     * @returns {Object} The data object, properly modified\n     */\n    Popper.prototype.modifiers.arrow = function (data) {\n        var arrow = this._options.arrowElement;\n        var arrowOffset = this._options.arrowOffset;\n\n        // if the arrowElement is a string, suppose it's a CSS selector\n        if (typeof arrow === 'string') {\n            arrow = this._popper.querySelector(arrow);\n        }\n\n        // if arrow element is not found, don't run the modifier\n        if (!arrow) {\n            return data;\n        }\n\n        // the arrow element must be child of its popper\n        if (!this._popper.contains(arrow)) {\n            console.warn('WARNING: `arrowElement` must be child of its popper element!');\n            return data;\n        }\n\n        // arrow depends on keepTogether in order to work\n        if (!this.isModifierRequired(this.modifiers.arrow, this.modifiers.keepTogether)) {\n            console.warn('WARNING: keepTogether modifier is required by arrow modifier in order to work, be sure to include it before arrow!');\n            return data;\n        }\n\n        var arrowStyle = {};\n        var placement = data.placement.split('-')[0];\n        var popper = getPopperClientRect(data.offsets.popper);\n        var reference = data.offsets.reference;\n        var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n        var len = isVertical ? 'height' : 'width';\n        var side = isVertical ? 'top' : 'left';\n        var translate = isVertical ? 'translateY' : 'translateX';\n        var altSide = isVertical ? 'left' : 'top';\n        var opSide = isVertical ? 'bottom' : 'right';\n        var arrowSize = getOuterSizes(arrow)[len];\n\n        //\n        // extends keepTogether behavior making sure the popper and its reference have enough pixels in conjuction\n        //\n\n        // top/left side\n        if (reference[opSide] - arrowSize < popper[side]) {\n            data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowSize);\n        }\n        // bottom/right side\n        if (reference[side] + arrowSize > popper[opSide]) {\n            data.offsets.popper[side] += reference[side] + arrowSize - popper[opSide];\n        }\n\n        // compute center of the popper\n        var center = reference[side] + (arrowOffset || reference[len] / 2 - arrowSize / 2);\n\n        var sideValue = center - popper[side];\n\n        // prevent arrow from being placed not contiguously to its popper\n        sideValue = Math.max(Math.min(popper[len] - arrowSize - 8, sideValue), 8);\n        arrowStyle[side] = sideValue;\n        arrowStyle[altSide] = ''; // make sure to remove any old style from the arrow\n\n        data.offsets.arrow = arrowStyle;\n        data.arrowElement = arrow;\n\n        return data;\n    };\n\n    //\n    // Helpers\n    //\n\n    /**\n     * Get the outer sizes of the given element (offset size + margins)\n     * @function\n     * @ignore\n     * @argument {Element} element\n     * @returns {Object} object containing width and height properties\n     */\n    function getOuterSizes(element) {\n        // NOTE: 1 DOM access here\n        var _display = element.style.display,\n            _visibility = element.style.visibility;\n        element.style.display = 'block';element.style.visibility = 'hidden';\n        var calcWidthToForceRepaint = element.offsetWidth;\n\n        // original method\n        var styles = root.getComputedStyle(element);\n        var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n        var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n        var result = { width: element.offsetWidth + y, height: element.offsetHeight + x };\n\n        // reset element styles\n        element.style.display = _display;element.style.visibility = _visibility;\n        return result;\n    }\n\n    /**\n     * Get the opposite placement of the given one/\n     * @function\n     * @ignore\n     * @argument {String} placement\n     * @returns {String} flipped placement\n     */\n    function getOppositePlacement(placement) {\n        var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n        return placement.replace(/left|right|bottom|top/g, function (matched) {\n            return hash[matched];\n        });\n    }\n\n    /**\n     * Given the popper offsets, generate an output similar to getBoundingClientRect\n     * @function\n     * @ignore\n     * @argument {Object} popperOffsets\n     * @returns {Object} ClientRect like output\n     */\n    function getPopperClientRect(popperOffsets) {\n        var offsets = Object.assign({}, popperOffsets);\n        offsets.right = offsets.left + offsets.width;\n        offsets.bottom = offsets.top + offsets.height;\n        return offsets;\n    }\n\n    /**\n     * Given an array and the key to find, returns its index\n     * @function\n     * @ignore\n     * @argument {Array} arr\n     * @argument keyToFind\n     * @returns index or null\n     */\n    function getArrayKeyIndex(arr, keyToFind) {\n        var i = 0,\n            key;\n        for (key in arr) {\n            if (arr[key] === keyToFind) {\n                return i;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    /**\n     * Get CSS computed property of the given element\n     * @function\n     * @ignore\n     * @argument {Eement} element\n     * @argument {String} property\n     */\n    function getStyleComputedProperty(element, property) {\n        // NOTE: 1 DOM access here\n        var css = root.getComputedStyle(element, null);\n        return css[property];\n    }\n\n    /**\n     * Returns the offset parent of the given element\n     * @function\n     * @ignore\n     * @argument {Element} element\n     * @returns {Element} offset parent\n     */\n    function getOffsetParent(element) {\n        // NOTE: 1 DOM access here\n        var offsetParent = element.offsetParent;\n        return offsetParent === root.document.body || !offsetParent ? root.document.documentElement : offsetParent;\n    }\n\n    /**\n     * Returns the scrolling parent of the given element\n     * @function\n     * @ignore\n     * @argument {Element} element\n     * @returns {Element} offset parent\n     */\n    function getScrollParent(element) {\n        var parent = element.parentNode;\n\n        if (!parent) {\n            return element;\n        }\n\n        if (parent === root.document) {\n            // Firefox puts the scrollTOp value on `documentElement` instead of `body`, we then check which of them is\n            // greater than 0 and return the proper element\n            if (root.document.body.scrollTop || root.document.body.scrollLeft) {\n                return root.document.body;\n            } else {\n                return root.document.documentElement;\n            }\n        }\n\n        // Firefox want us to check `-x` and `-y` variations as well\n        if (['scroll', 'auto'].indexOf(getStyleComputedProperty(parent, 'overflow')) !== -1 || ['scroll', 'auto'].indexOf(getStyleComputedProperty(parent, 'overflow-x')) !== -1 || ['scroll', 'auto'].indexOf(getStyleComputedProperty(parent, 'overflow-y')) !== -1) {\n            // If the detected scrollParent is body, we perform an additional check on its parentNode\n            // in this way we'll get body if the browser is Chrome-ish, or documentElement otherwise\n            // fixes issue #65\n            return parent;\n        }\n        return getScrollParent(element.parentNode);\n    }\n\n    /**\n     * Check if the given element is fixed or is inside a fixed parent\n     * @function\n     * @ignore\n     * @argument {Element} element\n     * @argument {Element} customContainer\n     * @returns {Boolean} answer to \"isFixed?\"\n     */\n    function isFixed(element) {\n        if (element === root.document.body) {\n            return false;\n        }\n        if (getStyleComputedProperty(element, 'position') === 'fixed') {\n            return true;\n        }\n        return element.parentNode ? isFixed(element.parentNode) : element;\n    }\n\n    /**\n     * Set the style to the given popper\n     * @function\n     * @ignore\n     * @argument {Element} element - Element to apply the style to\n     * @argument {Object} styles - Object with a list of properties and values which will be applied to the element\n     */\n    function setStyle(element, styles) {\n        function is_numeric(n) {\n            return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n        }\n        Object.keys(styles).forEach(function (prop) {\n            var unit = '';\n            // add unit if the value is numeric and is one of the following\n            if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && is_numeric(styles[prop])) {\n                unit = 'px';\n            }\n            element.style[prop] = styles[prop] + unit;\n        });\n    }\n\n    /**\n     * Check if the given variable is a function\n     * @function\n     * @ignore\n     * @argument {*} functionToCheck - variable to check\n     * @returns {Boolean} answer to: is a function?\n     */\n    function isFunction(functionToCheck) {\n        var getType = {};\n        return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n    }\n\n    /**\n     * Get the position of the given element, relative to its offset parent\n     * @function\n     * @ignore\n     * @param {Element} element\n     * @return {Object} position - Coordinates of the element and its `scrollTop`\n     */\n    function getOffsetRect(element) {\n        var elementRect = {\n            width: element.offsetWidth,\n            height: element.offsetHeight,\n            left: element.offsetLeft,\n            top: element.offsetTop\n        };\n\n        elementRect.right = elementRect.left + elementRect.width;\n        elementRect.bottom = elementRect.top + elementRect.height;\n\n        // position\n        return elementRect;\n    }\n\n    /**\n     * Get bounding client rect of given element\n     * @function\n     * @ignore\n     * @param {HTMLElement} element\n     * @return {Object} client rect\n     */\n    function getBoundingClientRect(element) {\n        var rect = element.getBoundingClientRect();\n\n        // whether the IE version is lower than 11\n        var isIE = navigator.userAgent.indexOf(\"MSIE\") != -1;\n\n        // fix ie document bounding top always 0 bug\n        var rectTop = isIE && element.tagName === 'HTML' ? -element.scrollTop : rect.top;\n\n        return {\n            left: rect.left,\n            top: rectTop,\n            right: rect.right,\n            bottom: rect.bottom,\n            width: rect.right - rect.left,\n            height: rect.bottom - rectTop\n        };\n    }\n\n    /**\n     * Given an element and one of its parents, return the offset\n     * @function\n     * @ignore\n     * @param {HTMLElement} element\n     * @param {HTMLElement} parent\n     * @return {Object} rect\n     */\n    function getOffsetRectRelativeToCustomParent(element, parent, fixed) {\n        var elementRect = getBoundingClientRect(element);\n        var parentRect = getBoundingClientRect(parent);\n\n        if (fixed) {\n            var scrollParent = getScrollParent(parent);\n            parentRect.top += scrollParent.scrollTop;\n            parentRect.bottom += scrollParent.scrollTop;\n            parentRect.left += scrollParent.scrollLeft;\n            parentRect.right += scrollParent.scrollLeft;\n        }\n\n        var rect = {\n            top: elementRect.top - parentRect.top,\n            left: elementRect.left - parentRect.left,\n            bottom: elementRect.top - parentRect.top + elementRect.height,\n            right: elementRect.left - parentRect.left + elementRect.width,\n            width: elementRect.width,\n            height: elementRect.height\n        };\n        return rect;\n    }\n\n    /**\n     * Get the prefixed supported property name\n     * @function\n     * @ignore\n     * @argument {String} property (camelCase)\n     * @returns {String} prefixed property (camelCase)\n     */\n    function getSupportedPropertyName(property) {\n        var prefixes = ['', 'ms', 'webkit', 'moz', 'o'];\n\n        for (var i = 0; i < prefixes.length; i++) {\n            var toCheck = prefixes[i] ? prefixes[i] + property.charAt(0).toUpperCase() + property.slice(1) : property;\n            if (typeof root.document.body.style[toCheck] !== 'undefined') {\n                return toCheck;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * The Object.assign() method is used to copy the values of all enumerable own properties from one or more source\n     * objects to a target object. It will return the target object.\n     * This polyfill doesn't support symbol properties, since ES5 doesn't have symbols anyway\n     * Source: https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n     * @function\n     * @ignore\n     */\n    if (!Object.assign) {\n        Object.defineProperty(Object, 'assign', {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value: function value(target) {\n                if (target === undefined || target === null) {\n                    throw new TypeError('Cannot convert first argument to object');\n                }\n\n                var to = Object(target);\n                for (var i = 1; i < arguments.length; i++) {\n                    var nextSource = arguments[i];\n                    if (nextSource === undefined || nextSource === null) {\n                        continue;\n                    }\n                    nextSource = Object(nextSource);\n\n                    var keysArray = Object.keys(nextSource);\n                    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n                        var nextKey = keysArray[nextIndex];\n                        var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                        if (desc !== undefined && desc.enumerable) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n                return to;\n            }\n        });\n    }\n\n    return Popper;\n});","'use strict';\n\nexports.__esModule = true;\n\nvar _vue = require('vue');\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _popup = require('element-ui/lib/utils/popup');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PopperJS = _vue2.default.prototype.$isServer ? function () {} : require('./popper');\nvar stop = function stop(e) {\n  return e.stopPropagation();\n};\n\n/**\n * @param {HTMLElement} [reference=$refs.reference] - The reference element used to position the popper.\n * @param {HTMLElement} [popper=$refs.popper] - The HTML element used as popper, or a configuration used to generate the popper.\n * @param {String} [placement=button] - Placement of the popper accepted values: top(-start, -end), right(-start, -end), bottom(-start, -end), left(-start, -end)\n * @param {Number} [offset=0] - Amount of pixels the popper will be shifted (can be negative).\n * @param {Boolean} [visible=false] Visibility of the popup element.\n * @param {Boolean} [visible-arrow=false] Visibility of the arrow, no style.\n */\nexports.default = {\n  props: {\n    transformOrigin: {\n      type: [Boolean, String],\n      default: true\n    },\n    placement: {\n      type: String,\n      default: 'bottom'\n    },\n    boundariesPadding: {\n      type: Number,\n      default: 5\n    },\n    reference: {},\n    popper: {},\n    offset: {\n      default: 0\n    },\n    value: Boolean,\n    visibleArrow: Boolean,\n    arrowOffset: {\n      type: Number,\n      default: 35\n    },\n    appendToBody: {\n      type: Boolean,\n      default: true\n    },\n    popperOptions: {\n      type: Object,\n      default: function _default() {\n        return {\n          gpuAcceleration: false\n        };\n      }\n    }\n  },\n\n  data: function data() {\n    return {\n      showPopper: false,\n      currentPlacement: ''\n    };\n  },\n\n\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler(val) {\n        this.showPopper = val;\n        this.$emit('input', val);\n      }\n    },\n\n    showPopper: function showPopper(val) {\n      if (this.disabled) {\n        return;\n      }\n      val ? this.updatePopper() : this.destroyPopper();\n      this.$emit('input', val);\n    }\n  },\n\n  methods: {\n    createPopper: function createPopper() {\n      var _this = this;\n\n      if (this.$isServer) return;\n      this.currentPlacement = this.currentPlacement || this.placement;\n      if (!/^(top|bottom|left|right)(-start|-end)?$/g.test(this.currentPlacement)) {\n        return;\n      }\n\n      var options = this.popperOptions;\n      var popper = this.popperElm = this.popperElm || this.popper || this.$refs.popper;\n      var reference = this.referenceElm = this.referenceElm || this.reference || this.$refs.reference;\n\n      if (!reference && this.$slots.reference && this.$slots.reference[0]) {\n        reference = this.referenceElm = this.$slots.reference[0].elm;\n      }\n\n      if (!popper || !reference) return;\n      if (this.visibleArrow) this.appendArrow(popper);\n      if (this.appendToBody) document.body.appendChild(this.popperElm);\n      if (this.popperJS && this.popperJS.destroy) {\n        this.popperJS.destroy();\n      }\n\n      options.placement = this.currentPlacement;\n      options.offset = this.offset;\n      options.arrowOffset = this.arrowOffset;\n      this.popperJS = new PopperJS(reference, popper, options);\n      this.popperJS.onCreate(function (_) {\n        _this.$emit('created', _this);\n        _this.resetTransformOrigin();\n        _this.$nextTick(_this.updatePopper);\n      });\n      if (typeof options.onUpdate === 'function') {\n        this.popperJS.onUpdate(options.onUpdate);\n      }\n      this.popperJS._popper.style.zIndex = _popup.PopupManager.nextZIndex();\n      this.popperElm.addEventListener('click', stop);\n    },\n    updatePopper: function updatePopper() {\n      var popperJS = this.popperJS;\n      if (popperJS) {\n        popperJS.update();\n        if (popperJS._popper) {\n          popperJS._popper.style.zIndex = _popup.PopupManager.nextZIndex();\n        }\n      } else {\n        this.createPopper();\n      }\n    },\n    doDestroy: function doDestroy(forceDestroy) {\n      /* istanbul ignore if */\n      if (!this.popperJS || this.showPopper && !forceDestroy) return;\n      this.popperJS.destroy();\n      this.popperJS = null;\n    },\n    destroyPopper: function destroyPopper() {\n      if (this.popperJS) {\n        this.resetTransformOrigin();\n      }\n    },\n    resetTransformOrigin: function resetTransformOrigin() {\n      if (!this.transformOrigin) return;\n      var placementMap = {\n        top: 'bottom',\n        bottom: 'top',\n        left: 'right',\n        right: 'left'\n      };\n      var placement = this.popperJS._popper.getAttribute('x-placement').split('-')[0];\n      var origin = placementMap[placement];\n      this.popperJS._popper.style.transformOrigin = typeof this.transformOrigin === 'string' ? this.transformOrigin : ['top', 'bottom'].indexOf(placement) > -1 ? 'center ' + origin : origin + ' center';\n    },\n    appendArrow: function appendArrow(element) {\n      var hash = void 0;\n      if (this.appended) {\n        return;\n      }\n\n      this.appended = true;\n\n      for (var item in element.attributes) {\n        if (/^_v-/.test(element.attributes[item].name)) {\n          hash = element.attributes[item].name;\n          break;\n        }\n      }\n\n      var arrow = document.createElement('div');\n\n      if (hash) {\n        arrow.setAttribute(hash, '');\n      }\n      arrow.setAttribute('x-arrow', '');\n      arrow.className = 'popper__arrow';\n      element.appendChild(arrow);\n    }\n  },\n\n  beforeDestroy: function beforeDestroy() {\n    this.doDestroy(true);\n    if (this.popperElm && this.popperElm.parentNode === document.body) {\n      this.popperElm.removeEventListener('click', stop);\n      document.body.removeChild(this.popperElm);\n    }\n  },\n\n\n  // call destroy in keep-alive mode\n  deactivated: function deactivated() {\n    this.$options.beforeDestroy[0].call(this);\n  }\n};"],"sourceRoot":""}